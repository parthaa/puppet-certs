#!/bin/bash
#
# Copyright 2015 Red Hat, Inc.
#
# This software is licensed to you under the GNU General Public License,
# version 2 (GPLv2). There is NO WARRANTY for this software, express or
# implied, including the implied warranties of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2
# along with this software; if not, see
# http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.
#
# Red Hat trademarks are not licensed under GPLv2. No permission is
# granted to use or replicate Red Hat trademarks that are incorporated
# in this software or its documentation.
#
# Configures rhsm on client. Called from the certificate RPM.
#

KATELLO_SERVER=<%= @hostname %>
KATELLO_CERT=<%= @sub_manager_cert_file_name %>
KATELLO_CERT_DIR=<%= @rhsm_ca_dir %>
PORT=<%= @rhsm_port %>
BASEURL=https://$KATELLO_SERVER/pulp/ostree/web/

PREFIX=<%= @deployment_url %>
SCRIPT_DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )

CFG=/etc/rhsm/rhsm.conf
CFG_BACKUP=$CFG.kat-backup
CA_TRUST_ANCHORS=/etc/pki/ca-trust/source/anchors
# exit on non-RHEL systems or when rhsm.conf is not found
test -f $CFG || exit
type -P subscription-manager >/dev/null || type -P subscription-manager-cli >/dev/null || exit

# backup configuration during the first run
test -f $CFG_BACKUP || cp $CFG $CFG_BACKUP

cp $SCRIPT_DIR/$KATELLO_CERT $KATELLO_CERT_DIR

# configure rhsm
# the config command was introduced in rhsm 0.96.6
subscription-manager config \
  --server.hostname="$KATELLO_SERVER" \
  --server.prefix="$PREFIX" \
  --server.port="$PORT" \
  --rhsm.repo_ca_cert="%(ca_cert_dir)s$KATELLO_CERT" \
  --rhsm.baseurl="$BASEURL"

# also add the katello ca cert to the system wide ca cert store
if [ -d $CA_TRUST_ANCHORS ]; then
  update-ca-trust enable
  cp $KATELLO_CERT_DIR/$KATELLO_CERT $CA_TRUST_ANCHORS
  update-ca-trust

  # restart docker if it is installed and running
  if [ -f /usr/lib/systemd/system/docker.service ]; then
    systemctl status docker >/dev/null && \
    systemctl restart docker >/dev/null 2&>1
  elif [ -f /etc/init.d/docker ]; then
    service docker status >/dev/null && \
    service docker restart >/dev/null 2&>1
  fi
fi

# restart goferd if it is installed and running
[ -f /etc/init.d/goferd ] && \
  service goferd status >/dev/null && \
  service goferd restart >/dev/null 2&>1

exit 0

# vim:sw=2:ts=2:et:
